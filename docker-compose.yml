version: '3.9'

services:
  orders:
    build:
      context: .
      dockerfile: ./apps/orders/Dockerfile
      target: development
    command: npm run start:dev orders
    env_file:
      - ./apps/orders/.env
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'

  billing:
    build:
      context: .
      dockerfile: ./apps/billing/Dockerfile
      target: development
    command: npm run start:dev billing
    env_file:
      - ./apps/billing/.env
    depends_on:
      - mongodb
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  rabbitmq:
    image: rabbitmq
    ports:
      - '5672:5672'
  
  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - 27017:27017
    volumes:
      - ./mongodb-volume:/data/db


  # mongodb:
  #   container_name: mongodb
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: mongo
  #     MONGO_INITDB_ROOT_PASSWORD: mongo
  #   healthcheck:
  #     test: echo 'db.runCommand("ping").ok' | mongo mongo:mongo@localhost:27017 --quiet
  #     interval: 10s
  #     timeout: 10s
  #     retries: 2
  #     start_period: 40s
  #   ports:
  #     - 27017:27017

  # mongo-init:
  #   image: mongo:5
  #   restart: 'no'
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #   command: >
  #     mongo --host mongodb:27017 --eval
  #     '
  #     rs.initiate( {
  #        _id : "rs0",
  #        members: [
  #           { _id: 0, host: "localhost:27017" }
  #        ]
  #     })
  #     '
  #    '